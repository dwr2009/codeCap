######################################################################
# Automatically generated by qmake (2.01a) ??? ??? 29 11:47:12 2011
######################################################################

TEMPLATE = lib
TARGET = QtExt
CONFIG += release
DEPENDPATH += . GeneratedFiles
isEmpty(QTDIR) {
	QTDIR = $(QT_DIR)
}
INCLUDEPATH += $${QTDIR}/include $${QTDIR}/include/QtWidgets
INCLUDEPATH += . $$quote($$(PWD)/../LinuxBaseLib/Include)
LINUXBASELIB_DIR = $$quote($$(PWD)/../LinuxBaseLib/Out)
#SYSTEM_CMD=$$quote(echo LINUXBASELIB_DIR=$${LINUXBASELIB_DIR})
#system($${SYSTEM_CMD})
#QMAKE_RPATHDIR += $$quote($${LINUXBASELIB_DIR})

# Input
HEADERS += QXmlDocument.h QWidgetEx.h QResolveConf.h QAutoLock.h	\
	QUrlInfoEx.h QParamParser.h QNetworkAddrConverter.h QDebug.h	\
	Api/QErrorInfoList.h QTarPackageReader.h Api/QCryptRC4.h	\
	Api/QTouchScreen.h Api/QNetDhcp.h
FORMS += 
SOURCES += QXmlDocument.cpp QWidgetEx.cpp QResolveConf.cpp QAutoLock.cpp	\
	QUrlInfoEx.cpp QParamParser.cpp QNetworkAddrConverter.cpp	\
	QErrorInfoList.cpp QTarPackageReader.cpp QCryptRC4.cpp	\
	QTouchScreen.cpp QNetDhcp.cpp
#RESOURCES += qt_browser.qrc
QT += core	\
	xml
#LIBS += -L$${LINUXBASELIB_DIR} -lLinuxBaseLib

contains(QMAKE_CXXFLAGS, -ggdb) {
} else {
	QMAKE_CXXFLAGS += -ggdb
}

contains(QMAKE_LFLAGS, -ggdb) {
} else {
	QMAKE_LFLAGS += -ggdb
}
